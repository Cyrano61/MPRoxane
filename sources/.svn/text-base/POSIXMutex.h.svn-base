#ifndef INCLUDE_POSIXMUTEX_H
#define INCLUDE_POSIXMUTEX_H

#include <pthread.h>
#include <string>
#include <cstdlib>

class POSIXMutex
{

   public:

    POSIXMutex();
   ~POSIXMutex();

    void lock();
    void unlock();
    void try_lock();



    //pthread_t getCurrent(void) const;
    pthread_mutex_t& getMutex();


   private:

    pthread_mutex_t mutex;
    //pthread_t       tid;

};

inline void POSIXMutex::lock() {
	pthread_mutex_lock(&mutex);
	//tid = pthread_self();
};


inline void POSIXMutex::unlock() {
	//tid = static_cast<pthread_t> (0);
	pthread_mutex_unlock(&mutex);
};


inline void POSIXMutex::try_lock() {
	pthread_mutex_trylock(&mutex);
};

/*
inline pthread_t POSIXMutex::getCurrent() const {
   return tid;
};
*/

inline pthread_mutex_t& POSIXMutex::getMutex() {
   return mutex;
};

#endif
